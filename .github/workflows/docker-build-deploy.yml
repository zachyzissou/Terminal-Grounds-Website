name: Build and Deploy Docker Image

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'DEPLOYMENT_GUIDE.md'
      - 'DOCKER_BUILD.md'
      - 'DEPLOYMENT.md'
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: zachyzissou/terminal-grounds-website
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.build
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Make GHCR package public
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGE: terminal-grounds-website
        OWNER: ${{ github.repository_owner }}
      run: |
        set +e
        RESP=$(curl -sS -o /dev/null -w "%{http_code}" \
          -X PUT \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/user/packages/container/$PACKAGE/visibility \
          -d '{"visibility":"public"}')
        if [ "$RESP" != "200" ] && [ "$RESP" != "204" ]; then
          curl -sS -o /dev/null -w "%{http_code}" \
            -X PUT \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/orgs/$OWNER/packages/container/$PACKAGE/visibility \
            -d '{"visibility":"public"}' || true
        fi

    - name: Update deployment status
      if: github.event_name != 'pull_request'
      run: |
        echo "::notice::Docker image pushed successfully to ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        echo "::notice::Unraid users can now pull the latest image using the template"